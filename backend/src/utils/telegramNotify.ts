import {PrismaClient} from '.prisma/client';
import {sendTelegramNotification} from './sendTelegramNotification'; // –ø—É—Ç—å –∫ —Ç–≤–æ–µ–π —Ñ—É–Ω–∫—Ü–∏–∏

const prisma = new PrismaClient();

/**
 * –£–≤–µ–¥–æ–º–ª—è–µ—Ç —Å–æ–∑–¥–∞—Ç–µ–ª—è —Å–æ–±—ã—Ç–∏—è –ø–æ –µ–≥–æ eventId
 */
export const notifyCreator = async (eventId: number, message: string) => {
    try {
        const event = await prisma.event.findUnique({
            where: {id: eventId},
            select: {
                title: true,
                creator: {
                    select: {
                        telegramId: true
                    }
                }
            }
        });
        const finalEvent = await prisma.event.findUnique({
            where: {id: eventId},
            include: {UserEvent: true},
        });
        // const creator = await prisma.user.findUnique({
        //     where: {id: event.creatorId},
        // });


        const totalMain = finalEvent?.UserEvent.reduce((sum, ue) => sum + ue.mainParticipantsCount, 0) || 0;
        const totalReserve = finalEvent?.UserEvent.reduce((sum, ue) => sum + ue.reserveParticipantsCount, 0) || 0;
        if (event?.creator?.telegramId) {
            const fullMessage =
                `${message}\n` +
                "\n" +
                `‚ùó–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —Ç–æ–ª—å–∫–æ –¥–ª—è –æ—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä–∞\n` +
                `üîî –°–æ–±—ã—Ç–∏–µ: ¬´${finalEvent?.title}¬ª\n` +
                `üë• –õ–∏–º–∏—Ç —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤: ${finalEvent?.limit}\n` +
                `üë§ –û—Å–Ω–æ–≤–Ω—ã—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤: ${totalMain}\n` +
                `‚è≥ –í —Ä–µ–∑–µ—Ä–≤–µ: ${totalReserve}\n`
            ;
            await sendTelegramNotification(event.creator.telegramId, fullMessage);
        }
    } catch (err) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è —Å–æ–∑–¥–∞—Ç–µ–ª—é:', err);
    }
};
